{"version":3,"sources":["components/header/index.js","components/snippetbox/index.js","components/collapsible/index.js","code/index.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","root","flexGrow","appbar","backgroundColor","toolbar","flexDirection","fontFamily","Header","classes","react_default","a","createElement","className","AppBar","position","Toolbar","Typography","variant","color","Snippetbox","_ref","data","rel","onClick","event","copyText","target","nextSibling","textContent","textArea","document","body","append","select","execCommand","id","Collapsible","heading","body_text","body_code","code_input","code_output","_useState","useState","_useState2","Object","slicedToArray","visibility","setVisibility","snippetbox","ExpandMore_default","javascript","Date","keywords","App","Fragment","Container","fixed","style","marginTop","codeDetails","map","item","collapsible","assign","key","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d692248a.chunk.js","sourcesContent":["// import React from 'react'\n// const header_main ={\n//     background: '#1976d2',\n//     padding: '1rem',\n//     fontSize: '20px',\n//     fontFamily: 'fantasy',\n//     color:'white',\n//     position: 'sticky',\n//     fontWeight: '700',\n//     borderBottom: '5px solid #f5f5f5'\n// } \n// const logo_block ={\n//     width: 'fit-content',\n//     textAlign: 'center'\n// } \n// const logo_text ={\n//     fontSize: '2rem',\n//     height: '34px'\n// } \n// const logo_subtext ={\n//     fontSize: '16px'\n// } \n\n\n// const Header = ()=><>\n// <header style={header_main}>\n//     <div style={logo_block}>\n//         <div style={logo_text}>Cadet Who Code</div>\n//         <div style={logo_subtext}>Believe you can and you're halfway there.</div>\n//     </div>\n// </header>\n\n// </>\n// export default Header\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1\n  },\n  appbar:{\n    backgroundColor: '#1976d2 !important'\n  },\n  toolbar:{\n    flexDirection: 'column',\n    fontFamily: 'fantasy'\n  }\n});\n\nexport default function Header() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" className={classes.appbar}>\n        <Toolbar className={classes.toolbar}>\n          <Typography variant=\"h4\" color=\"inherit\">\n            Store My Code \n          </Typography>\n          <div>A place for web snippets </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","import React from 'react'\nimport './style.css'\nconst Snippetbox = ({data, rel})=>{\n    const copyHandler=(event)=>{\n        debugger;\n        const copyText = event.target.nextSibling.textContent\n        const textArea = document.createElement('textarea');\n        textArea.textContent = copyText;\n        document.body.append(textArea);\n        textArea.select();\n        document.execCommand(\"copy\");\n    }\n    return (\n    <pre rel={rel}>\n        <span className=\"copy-text\" onClick={copyHandler}>Copy</span>\n        <code id=\"myInput\">\n            {data}\n        </code>\n    </pre>\n    )\n}\n\n\nexport default Snippetbox","import React, {useState} from 'react'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport './style.css'\nimport Sinppetbox from '../snippetbox'\nconst Collapsible =({heading, body_text, body_code, rel, code_input, code_output})=>{\n  const [visibility, setVisibility] = useState(false)\n  return (\n    <div className=\"collapse_container\">\n    <div className=\"collapsible_header\" onClick={()=>setVisibility(!visibility)}>\n    <strong>{heading}</strong></div>\n    {visibility && <div className=\"collapsible_body show\" >\n      {code_input && <Sinppetbox data={code_input} rel='Input'/>}\n      {body_text}\n      <Sinppetbox data={body_code} rel={rel}/>\n      {code_output && <Sinppetbox data={code_output} rel='Output'/>}\n    </div>}\n    <ExpandMoreIcon className=\"collapsible_down_arrow\"/>\n    </div>\n  )\n}\nexport default Collapsible","export const javascript =[\n    {   \n        id:new Date(),\n        heading:'Sort an array of objects by multiple fields',\n        keywords:['array', 'sorting', 'multiple', 'Object'],\n        code_input:`\n        var data = [\n            {\"id\":\"1\", \"city\":\"Melbourne\", \"state\":\"VIC\",\"zip\":\"75201\",\"price\":\"162500\"},\n            {\"id\":\"2\",\"city\":\"Surry Hills\", \"state\":\"NSW\", \"zip\":\"90210\", \"price\":\"319250\"},\n            {\"id\":\"3\", \"city\":\"Howthorn\", \"state\":\"VIC\", \"zip\":\"75000\", \"price\":\"556699\"},\n            {\"id\":\"4\", \"city\":\"Brisbane\", \"state\":\"QLD\", \"zip\":\"00010\", \"price\":\"962500\"}\n            ];\n        `,\n        code_output:`\n        [   {\"id\":\"4\", \"city\":\"Brisbane\", \"state\":\"QLD\", \"zip\":\"00010\", \"price\":\"962500\"},\n            {\"id\":\"3\", \"city\":\"Howthorn\", \"state\":\"VIC\", \"zip\":\"75000\", \"price\":\"556699\"}\n            {\"id\":\"1\", \"city\":\"Melbourne\", \"state\":\"VIC\",\"zip\":\"75201\",\"price\":\"162500\"},\n            {\"id\":\"2\",\"city\":\"Surry Hills\", \"state\":\"NSW\", \"zip\":\"90210\", \"price\":\"319250\"}\n        ]\n        `,\n        body_code:`\n        function multiSort(fields) {\n            return function (a, b) {\n                return fields\n                    .map(function (item) {\n                        var dir = 1;\n                        if (item[0] === '-') {\n                           dir = -1;\n                           item=item.substring(1);\n                        }\n                        if (a[item] > b[item]) return dir;\n                        if (a[item] < b[item]) return -(dir);\n                        return 0;\n                    })\n                    .reduce(function firstNonZeroValue (p,n) {\n                        return p ? p : n;\n                    }, 0);\n            };\n        }\n\n        //calling\n        data.sort(multiSort(['city', '-price']));\n        `,\n        body_text:`\n        Below is the main logic to Sort an array of objects by multiple fields. You can pass the number of fields in array you want to sort.\n        By default it's in accending order, Prepend minus to specify descending order.\n        `,\n        rel:'logic'\n\n    }]","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Header from './components/header'\nimport Collapsible from './components/collapsible'\nimport * as codeDetails from './code/index'\nfunction App() {\n  const getMyCode =(data)=>{\n    return (\n      data.map(item =><Collapsible {...item} key={item.id}/>)\n    )\n    \n  }\n  return (\n    <>\n    <Header/>\n    <Container fixed style={{'marginTop': '2rem'}}>\n      {getMyCode(codeDetails.javascript)}\n    </Container> \n    \n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}